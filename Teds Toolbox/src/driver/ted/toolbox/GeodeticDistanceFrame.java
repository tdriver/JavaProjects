/*
 * Geodetic_ECEF.java
 *
 * Created on August 26, 2002, 8:48 PM
 */

package driver.ted.toolbox;
import driver.ted.utilities.T_Utilities;
import java.util.prefs.Preferences;
import java.awt.event.*;

/**
 *
 * @author  tdriver
 */
public class GeodeticDistanceFrame extends javax.swing.JInternalFrame {
    
    
    final String latitudePref = "Latitude";
    final String longitudePref = "Longitude";
    final String timeOffsetPref = "TimeOffset";
    final double dtr = T_Utilities.DtR;
    final double eer = T_Utilities.EarthEquatorialRadius;
    final double flattening = 1.0/298.257;
    double latFrom;
    double longFrom;
    double latTo;
    double longTo;
    double distance; // always in meters
    boolean isApplet;
    
    Preferences prefs;
    
    /** Creates new form Geodetic_ECEF */
    public GeodeticDistanceFrame(boolean applet) {
        isApplet = applet;
        initComponents();
        if(!isApplet){
            prefs = Preferences.userNodeForPackage(this.getClass());
            checkForStoredPreferences();
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        distanceField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        locationInputBeanFrom = new driver.ted.beans.Location.LocationInputBean();
        locationInputBeanTo = new driver.ted.beans.Location.LocationInputBean();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 0)));
        setClosable(true);
        setIconifiable(true);
        setTitle("Geodetic Distance");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/driver/ted/toolbox/images/coordtool.gif")));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setText("Distance:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, -1, -1));

        distanceField.setEditable(false);
        getContentPane().add(distanceField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 170, -1));

        jButton1.setText("Calculate");
        jButton1.setToolTipText("Calculates the distance between locations");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Meters", "Kilometers", "Miles", "Feet" }));
        jComboBox1.setToolTipText("Selec the distance units");
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(357, 238, 90, 20));

        locationInputBeanFrom.setBorder(new javax.swing.border.TitledBorder(null, "From Location", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP));
        getContentPane().add(locationInputBeanFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 14, 290, 190));

        locationInputBeanTo.setBorder(new javax.swing.border.TitledBorder(null, "To Location", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP));
        getContentPane().add(locationInputBeanTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 14, 290, 190));

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-606)/2, (screenSize.height-311)/2, 606, 311);
    }//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        //update distance here and re-display in distance Field...this is the changing of units
        int index = jComboBox1.getSelectedIndex();
        if(index == 0){
            distanceField.setText(new java.text.DecimalFormat("00.00").format(distance));
        }else if(index == 1){
            distanceField.setText(new java.text.DecimalFormat("00.00").format(distance/1000.0));
        }else if(index == 2){
            distanceField.setText(new java.text.DecimalFormat("00.00").format(distance/.3048/5280.0));
        }else if(index == 3){
            distanceField.setText(new java.text.DecimalFormat("00.00").format(distance/0.3048));
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Do all Meeus Processing Here and update distanceField with result
       latFrom = locationInputBeanFrom.getLatitude();
       latTo = locationInputBeanTo.getLatitude();
       longFrom = locationInputBeanFrom.getLongitude();
       longTo = locationInputBeanTo.getLongitude();
       
       double F = (latFrom + latTo)/2.0;
       double G = (latFrom - latTo)/2.0;
       double lambda = (longFrom - longTo)/2.0;
       double S = Math.sin(G*dtr)*Math.sin(G*dtr)*Math.cos(lambda*dtr)*Math.cos(lambda*dtr);
              S += Math.cos(F*dtr)*Math.cos(F*dtr)*Math.sin(lambda*dtr)*Math.sin(lambda*dtr);
       double C = Math.cos(G*dtr)*Math.cos(G*dtr)*Math.cos(lambda*dtr)*Math.cos(lambda*dtr);
              C += Math.sin(F*dtr)*Math.sin(F*dtr)*Math.sin(lambda*dtr)*Math.sin(lambda*dtr);
       double omega = Math.atan(Math.sqrt(S/C));
       double R = Math.sqrt(S*C)/omega;
       double D = 2.0*omega*eer;
       double H1 = (3.0*R - 1.0)/(2.0*C);
       double H2 = (3.0*R + 1.0)/(2.0*S);
       
       double X = flattening*H1*Math.sin(F*dtr)*Math.sin(F*dtr)*Math.cos(G*dtr)*Math.cos(G*dtr);
       double Y = flattening*H2*Math.cos(F*dtr)*Math.cos(F*dtr)*Math.sin(G*dtr)*Math.sin(G*dtr);
       
       distance = D*(1.0 + X - Y);
       
       distanceField.setText(new java.text.DecimalFormat("00.00").format(distance));
       jComboBox1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
       if(!isApplet){
           driver.ted.toolbox.ToolBoxApp.decrementFrameCount();
       }else{
           driver.ted.toolbox.ToolBoxJPanel.decrementFrameCount();
       }
    }//GEN-LAST:event_formInternalFrameClosed
    
     private void checkForStoredPreferences(){
           try{
           if(contains(prefs,latitudePref))
               locationInputBeanFrom.setLatitude(prefs.getDouble(latitudePref,0.0));
           if(contains(prefs,longitudePref))
               locationInputBeanFrom.setLongitude(driver.ted.utilities.T_Utilities.normalize(-180, 180, prefs.getDouble(longitudePref,0.0)));
        }catch(java.beans.PropertyVetoException pve){
            javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error Setting Values from Preferences",
            javax.swing.JOptionPane.ERROR_MESSAGE);
        }   
    }
    
    private static boolean contains(Preferences node, String key){
        return node.get(key,null) != null;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField distanceField;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private driver.ted.beans.Location.LocationInputBean locationInputBeanFrom;
    private driver.ted.beans.Location.LocationInputBean locationInputBeanTo;
    // End of variables declaration//GEN-END:variables
    
}
