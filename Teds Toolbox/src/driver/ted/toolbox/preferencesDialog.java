/*
 * preferencesDialog.java
 *
 * Created on February 20, 2004
 */

package driver.ted.toolbox;
import java.util.prefs.Preferences;
import javax.swing.JOptionPane;

/**
 *
 * @author  tdriver
 */
public class preferencesDialog extends javax.swing.JDialog {
    
    Preferences prefs;
    final String latitudePref = "Latitude";
    final String longitudePref = "Longitude";
    final String heightPref = "Height";
    final String timeOffsetPref = "TimeOffset";
    
    /** Creates new form passwordDialog */
    public preferencesDialog(java.awt.Frame parent, boolean modal, Class c) {
        super(parent, modal);
        prefs = Preferences.userNodeForPackage(c);
        initComponents();
        initPreferences();
     }

    public preferencesDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
     }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        timeOffsetField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        locationInputBean1 = new driver.ted.beans.Location.LocationInputBean();
        helpButton = new javax.swing.JButton();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        getContentPane().add(okButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 70, -1));

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        getContentPane().add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, -1, -1));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Time Offset from GMT");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 130, -1));

        timeOffsetField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        timeOffsetField.setText("0.0");
        jPanel1.add(timeOffsetField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 50, -1));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("hours");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 40, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 150, 60));

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Location");
        jPanel2.add(jLabel2, java.awt.BorderLayout.NORTH);

        locationInputBean1.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 5, 10, 5)), new javax.swing.border.EtchedBorder()));
        jPanel2.add(locationInputBean1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 300, 230));

        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        getContentPane().add(helpButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, -1, -1));

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-338)/2, (screenSize.height-449)/2, 338, 449);
    }//GEN-END:initComponents

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        String helpString = "<HTML><body>You can change your location and time offset preferences here.<br>" +
        "The default location and time offset will be saved for future use.<br>" +
        "The Solar and Lunar Active Parameter changes will affect only those panels.";
        JOptionPane.showMessageDialog(this,helpString,"Preferences Help",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_helpButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        updated = false;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cancelButtonActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    // Validate all fields and than save data in local variables
        
        try{
            latitude = locationInputBean1.getLatitude();
            longitude = locationInputBean1.getLongitude();
            heightAMSL = locationInputBean1.getHeightAMSL();
            timeOffset = Double.parseDouble(timeOffsetField.getText());  
            updated = true;
            setVisible(false);
            dispose();
        }catch(NumberFormatException nfe){
            javax.swing.JOptionPane.showMessageDialog(this,
            "The Time Offset must be a decimal number",
            "Error Setting Time Offset",
            javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_okButtonActionPerformed

    /**
     * Getter for property latitude.
     * @return Value of property latitude.
     */
    public double getLatitude() {
        return this.latitude;
    }
    
    /**
     * Setter for property latitude.
     * @param latitude New value of property latitude.
     */
    public void setLatitude(double latitude) {
       try{
           locationInputBean1.setLatitude(latitude);           
       }catch(java.beans.PropertyVetoException pve){
            
       }
    }
    
    /**
     * Getter for property longitude.
     * @return Value of property longitude.
     */
    public double getLongitude() {
        return this.longitude;
    }
    
    /**
     * Setter for property longitude.
     * @param longitude New value of property longitude.
     */
    public void setLongitude(double longitude) {
        try{
            locationInputBean1.setLongitude(longitude);
        }catch(java.beans.PropertyVetoException pve){
            
        }
    }
    
    /**
     * Getter for property height.
     * @return Value of property height.
     */
    public double getHeightAMSL() {
        return this.heightAMSL;
    }
    
    /**
     * Setter for property height.
     * @param height New value of property height.
     */
    public void setHeightAMSL(double height) {
        try{
            locationInputBean1.setHeightAMSL(height);
        }catch(java.beans.PropertyVetoException pve){
            
        }
    }
    
    /**
     * Getter for property timeOffset.
     * @return Value of property timeOffset.
     */
    public double getTimeOffset() {
        return this.timeOffset;
    }
    
    /**
     * Setter for property timeOffset.
     * @param timeOffset New value of property timeOffset.
     */
    public void setTimeOffset(double timeOffset) {
        timeOffsetField.setText(new java.text.DecimalFormat("0.0").format(timeOffset));
    }
    
    /**
     * Getter for property optionsUpdated.
     * @return Value of property optionsUpdated.
     */
    public boolean isUpdated() {
        return this.updated;
    }
    
    /**
     * Setter for property optionsUpdated.
     * @param optionsUpdated New value of property optionsUpdated.
     */
    public void setupdated(boolean updated) {
    }
    
    private void initPreferences() {
        // initializes the default values from the preference store.
        try{
           if(contains(prefs,latitudePref))
               locationInputBean1.setLatitude(prefs.getDouble(latitudePref,0.0));
           if(contains(prefs,longitudePref))
               locationInputBean1.setLongitude(driver.ted.utilities.T_Utilities.normalize(-180, 180, prefs.getDouble(longitudePref,0.0)));
           if(contains(prefs,heightPref))
               locationInputBean1.setHeightAMSL(prefs.getDouble(heightPref,0.0));
           if(contains(prefs,timeOffsetPref))
               timeOffsetField.setText(new java.text.DecimalFormat("0.0").format(prefs.getDouble(timeOffsetPref,0)));    
        }catch(java.beans.PropertyVetoException pve){
            javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting initial preference values",
            javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private static boolean contains(Preferences node, String key){
        return node.get(key,null) != null;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private driver.ted.beans.Location.LocationInputBean locationInputBean1;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField timeOffsetField;
    // End of variables declaration//GEN-END:variables


    
    /**
     * Holds value of property latitude.
     */
    private double latitude;
    
    /**
     * Holds value of property longitude.
     */
    private double longitude;
    
    /**
     * Holds value of property heightAMSL.
     */
    private double heightAMSL;
    
    /**
     * Holds value of property timeOffset.
     */
    private double timeOffset;
    
    /**
     * Holds value of property optionsUpdated.
     */
    private boolean updated = false;
    
}
