/*
 * SiderealToolFrame.java
 *
 * Created on September 7, 2002, 6:55 AM
 */

package driver.ted.toolbox;
import driver.ted.utilities.T_JulianDate;
import driver.ted.utilities.T_Utilities;
import driver.ted.astro.T_Sidereal;
import driver.ted.astro.T_Nutate;
import java.awt.event.*;
import java.util.prefs.Preferences;
/**
 *
 * @author  tdriver
 */
public class SiderealToolFrame extends javax.swing.JInternalFrame {
    
      T_JulianDate jd = new T_JulianDate();
      T_Sidereal S = new T_Sidereal();
      T_Nutate N = new T_Nutate();
      Preferences prefs;
      boolean isApplet;
      final String timeOffsetPref = "TimeOffset";
      javax.swing.Timer timer1 = new javax.swing.Timer(1000,new ActionListener(){
          public void actionPerformed(ActionEvent evt) {
              jd.advance(0,0,0,0,0,1);
              updateDisplay();
            }
          }); 
    /** Creates new form SiderealToolFrame */
    public SiderealToolFrame(boolean applet) {
        isApplet = applet;
        initComponents();
        if(!isApplet){
            prefs = Preferences.userNodeForPackage(this.getClass());
            checkForStoredPreferences();
        }
        updateDisplay();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        julianDateInputBean1 = new driver.ted.beans.TimeDate.JulianDateInputBean();
        getCurrentTimeButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        meanSTField = new javax.swing.JTextField();
        apparentSTField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        nutInLongField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nutInOField = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        trueOField = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        activeDateField = new javax.swing.JTextField();
        activeJDateField = new javax.swing.JTextField();
        activeTimeField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        activeTimeOffsetField = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        timeOffsetInputField = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        dateTimeSpinnerBean1 = new driver.ted.beans.TimeDate.dateTimeSpinnerBean();
        jLabel13 = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setBackground(new java.awt.Color(51, 51, 51));
        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0)));
        setClosable(true);
        setIconifiable(true);
        setTitle("Sidereal Tool");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/driver/ted/toolbox/images/siderealtool.gif")));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        julianDateInputBean1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                julianDateInputBean1PropertyChange(evt);
            }
        });

        getContentPane().add(julianDateInputBean1, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 74, -1, -1));

        getCurrentTimeButton.setText("Get Current Time");
        getCurrentTimeButton.setFocusCycleRoot(true);
        getCurrentTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getCurrentTimeButtonActionPerformed(evt);
            }
        });

        getContentPane().add(getCurrentTimeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 227, -1, -1));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Sidereal Time"));
        jLabel1.setText("Mean");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jLabel2.setText("Apparent");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        meanSTField.setEditable(false);
        meanSTField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        meanSTField.setSelectionColor(new java.awt.Color(255, 255, 51));
        jPanel1.add(meanSTField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 120, -1));

        apparentSTField.setEditable(false);
        apparentSTField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        apparentSTField.setSelectionColor(new java.awt.Color(255, 255, 51));
        jPanel1.add(apparentSTField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 120, -1));

        jLabel3.setText("h:m:s");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, -1, -1));

        jLabel4.setText("h:m:s");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 210, 240, 70));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder("Nutation"));
        jLabel5.setText("Nutation in Longitude (Delta Psi)");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        nutInLongField.setEditable(false);
        nutInLongField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nutInLongField.setSelectionColor(new java.awt.Color(255, 255, 51));
        jPanel2.add(nutInLongField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 90, -1));

        jLabel6.setText("d m s");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, -1, -1));

        jLabel7.setText("Nutation In Obliquity (Delta Epsilon)");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        nutInOField.setEditable(false);
        nutInOField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nutInOField.setSelectionColor(new java.awt.Color(255, 255, 51));
        jPanel2.add(nutInOField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 90, -1));

        jLabel61.setText("Arcseconds");
        jPanel2.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        jLabel8.setText("True Obliquity (Epsilon)");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        trueOField.setEditable(false);
        trueOField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        trueOField.setSelectionColor(new java.awt.Color(255, 255, 51));
        jPanel2.add(trueOField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 120, -1));

        jLabel62.setText("Arcseconds");
        jPanel2.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 220, 170));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(new javax.swing.border.TitledBorder("Active Parameters"));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Date:");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 30, -1));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Time:");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Julian Date:");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 70, -1));

        activeDateField.setEditable(false);
        activeDateField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        activeDateField.setSelectionColor(new java.awt.Color(255, 255, 51));
        jPanel3.add(activeDateField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 140, -1));

        activeJDateField.setEditable(false);
        activeJDateField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        activeJDateField.setSelectionColor(new java.awt.Color(255, 255, 51));
        jPanel3.add(activeJDateField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 140, -1));

        activeTimeField.setEditable(false);
        activeTimeField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        activeTimeField.setSelectionColor(new java.awt.Color(255, 255, 51));
        jPanel3.add(activeTimeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 140, -1));

        jLabel12.setText("Time Offset:");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        activeTimeOffsetField.setEditable(false);
        activeTimeOffsetField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        activeTimeOffsetField.setSelectionColor(new java.awt.Color(255, 255, 51));
        jPanel3.add(activeTimeOffsetField, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 140, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 240, 120));

        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel11.setBorder(new javax.swing.border.TitledBorder("Time Offset"));
        timeOffsetInputField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        timeOffsetInputField.setText("0");
        jPanel11.add(timeOffsetInputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 50, -1));

        jLabel21.setText("hours from GMT");
        jPanel11.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        getContentPane().add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 133, 110, 60));

        jToggleButton1.setText("Continuously Update");
        jToggleButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 300, 150, -1));

        dateTimeSpinnerBean1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateTimeSpinnerBean1PropertyChange(evt);
            }
        });

        getContentPane().add(dateTimeSpinnerBean1, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 15, 220, 50));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/driver/ted/toolbox/images/Earth2.jpg")));
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 400));

        pack();
    }//GEN-END:initComponents

    private void dateTimeSpinnerBean1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateTimeSpinnerBean1PropertyChange
        jd = new T_JulianDate(dateTimeSpinnerBean1.getDateTime());
        updateDisplay();
    }//GEN-LAST:event_dateTimeSpinnerBean1PropertyChange

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        if(!isApplet){
            driver.ted.toolbox.ToolBoxApp.decrementFrameCount();
        }else{
            driver.ted.toolbox.ToolBoxJPanel.decrementFrameCount();
        }
    }//GEN-LAST:event_formInternalFrameClosed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        if(jToggleButton1.isSelected()){
            timeOffsetInputField.setEnabled(false);
            jToggleButton1.setText("      Stop Updating      ");
            timer1.start();
        }else{
            timer1.stop();
            timeOffsetInputField.setEnabled(true);
            jToggleButton1.setText("Continuously Update");
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void timeOffsetInputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeOffsetInputFieldActionPerformed
        try{
            activeTimeOffsetField.setText(timeOffsetInputField.getText());
            prefs.putFloat(timeOffsetPref,Float.parseFloat(timeOffsetInputField.getText()));
            updateDisplay();
        }catch(NumberFormatException nfe){
            javax.swing.JOptionPane.showMessageDialog(this,
            "Time Offset must be a float value.",
            "Error Setting Time Offset",
            javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_timeOffsetInputFieldActionPerformed

    private void getCurrentTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getCurrentTimeButtonActionPerformed
        jd = new T_JulianDate();
        updateDisplay();
    }//GEN-LAST:event_getCurrentTimeButtonActionPerformed

    private void julianDateInputBean1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_julianDateInputBean1PropertyChange
        jd = new T_JulianDate(julianDateInputBean1.getJD());
        updateDisplay();
    }//GEN-LAST:event_julianDateInputBean1PropertyChange
    
    private void updateDisplay(){
        activeDateField.setText(jd.getDate().toMediumString());
        activeTimeField.setText(jd.getTime().toString());
        activeJDateField.setText(new java.text.DecimalFormat("0.000000").format(jd.getJulianDate()));
        activeTimeOffsetField.setText(timeOffsetInputField.getText());
        
        double offset = Double.parseDouble(activeTimeOffsetField.getText());
        T_JulianDate tjd = new T_JulianDate(jd.getJulianDate() + offset/24.0);
        meanSTField.setText(T_Utilities.decimalToRAHMS(S.getSiderealTime(tjd),4));
        apparentSTField.setText(T_Utilities.decimalToRAHMS(S.getApparentSiderealTime(tjd),4));
        
        java.text.DecimalFormat stf = new java.text.DecimalFormat("0.0000");       
        nutInLongField.setText(stf.format(N.get_dpsi(jd)/T_Utilities.AsToRad));
        nutInOField.setText(stf.format(N.get_deps(jd)/T_Utilities.AsToRad));
        trueOField.setText(T_Utilities.decimalToDMS(N.get_eps(jd)/T_Utilities.DtR,3));
        
    }
    
    private void checkForStoredPreferences(){
        try{
           if(contains(prefs,timeOffsetPref))
               timeOffsetInputField.setText(new java.text.DecimalFormat("0.0").format(prefs.getFloat(timeOffsetPref,0)));    
        }catch(NumberFormatException nfe){
            javax.swing.JOptionPane.showMessageDialog(this,
            "Error setting Time Offset from stored preferences",
            "Error Setting Values from Preferences",
            javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private static boolean contains(Preferences node, String key){
        return node.get(key,null) != null;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField activeDateField;
    private javax.swing.JTextField activeJDateField;
    private javax.swing.JTextField activeTimeField;
    private javax.swing.JTextField activeTimeOffsetField;
    private javax.swing.JTextField apparentSTField;
    private driver.ted.beans.TimeDate.dateTimeSpinnerBean dateTimeSpinnerBean1;
    private javax.swing.JButton getCurrentTimeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JToggleButton jToggleButton1;
    private driver.ted.beans.TimeDate.JulianDateInputBean julianDateInputBean1;
    private javax.swing.JTextField meanSTField;
    private javax.swing.JTextField nutInLongField;
    private javax.swing.JTextField nutInOField;
    private javax.swing.JTextField timeOffsetInputField;
    private javax.swing.JTextField trueOField;
    // End of variables declaration//GEN-END:variables
    
}
