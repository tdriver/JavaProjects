/*
 * LocationInputBean.java
 *
 * Created on August 2, 2002, 1:15 PM
 */

package driver.ted.beans.Location;
import java.awt.CardLayout;
import driver.ted.utilities.T_Utilities;
import driver.ted.utilities.T_Site;

/**
 *
 * @author  tdriver
 */

// Program flow:
//     Whan a user changes a field on the GUI and presses enter the actionPerformed event is thrown for that field.
//     That fields event handler will parse the value and throw a number format exception if not a valid number.
//     If valid, the handler will call the appropriate "set" method.
//     The set method will fire a veto property change event and if good, assign the new value to the appropriate state variable.
//     It will then fire a property change event to let all the listeners of that property know it changed.
//     
public class LocationInputBean extends javax.swing.JPanel {
    
    
    private static int INPUT_TYPE;
    private static int DISPLAY_TYPE;
    private static int LONGITUDE_TYPE;
    
    // definitions for input_type
    private static final int GEODETIC = 1;
    private static final int ECEF = 2;
    
    // definitions for longitude type 
    private static final int POSITIVE = 3;
    private static final int POSNEG = 4;
    
    // definitions for display_type
    private static final int DECIMAL = 5;
    private static final int DMS = 6;
    
    // Latitude and longitide direction constants
    private static final int NORTH = 1;
    private static final int SOUTH = -1;
    private static final int EAST = 1;
    private static final int WEST = -1;
    
    
    
    // T_Site variable defining site info
    T_Site site;
    
    /** Creates new form BeanForm */
    public LocationInputBean() {
        DISPLAY_TYPE = DECIMAL;
        INPUT_TYPE = GEODETIC;
        LONGITUDE_TYPE = POSNEG;
        latitudeDirection = NORTH;
        longitudeDirection = EAST;
        site = new T_Site(T_Utilities.EarthEquatorialRadius,0.0,0.0);
        updateStates();
        initComponents();       
        updateDisplay();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        geoPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        longitudeField = new javax.swing.JTextField();
        latitudeField = new javax.swing.JTextField();
        heightField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel171 = new javax.swing.JLabel();
        jLabel172 = new javax.swing.JLabel();
        ecefPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        XField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        YField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ZField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel161 = new javax.swing.JLabel();
        jLabel162 = new javax.swing.JLabel();
        geoPanelDMS = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        longitudeDegreesField = new javax.swing.JTextField();
        longitudeMinutesField = new javax.swing.JTextField();
        longitudeSecondsField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        latitudeDegreesField = new javax.swing.JTextField();
        latitudeMinutesField = new javax.swing.JTextField();
        latitudeSecondsField = new javax.swing.JTextField();
        heightDMSField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        latitudeNorthDirection = new javax.swing.JRadioButton();
        latitudeSouthDirection = new javax.swing.JRadioButton();
        longitudeEastDirection = new javax.swing.JRadioButton();
        longitudeWestDirection = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        geodeticButton = new javax.swing.JRadioButton();
        ecefButton = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        positiveButton = new javax.swing.JRadioButton();
        posnegButton = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        decimalButton = new javax.swing.JRadioButton();
        dmsButton = new javax.swing.JRadioButton();

        setLayout(new java.awt.BorderLayout());

        setBorder(new javax.swing.border.TitledBorder("Location"));
        setMaximumSize(getPreferredSize());
        setMinimumSize(getPreferredSize());
        setPreferredSize(new java.awt.Dimension(267, 172));
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });
        addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                formVetoableChange(evt);
            }
        });

        jPanel1.setLayout(new java.awt.CardLayout());

        geoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        geoPanel.setBorder(new javax.swing.border.TitledBorder("Geodetic Coordinates"));
        jLabel4.setText("Latitude");
        geoPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel5.setText("Longitude");
        geoPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLabel6.setText("Height");
        geoPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        longitudeField.setText("0.0");
        longitudeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                longitudeFieldActionPerformed(evt);
            }
        });
        longitudeField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                longitudeFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                longitudeFieldFocusLost(evt);
            }
        });
        longitudeField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                longitudeFieldMouseClicked(evt);
            }
        });

        geoPanel.add(longitudeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 100, -1));

        latitudeField.setText("0.0");
        latitudeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latitudeFieldActionPerformed(evt);
            }
        });
        latitudeField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                latitudeFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                latitudeFieldFocusLost(evt);
            }
        });
        latitudeField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                latitudeFieldMouseClicked(evt);
            }
        });

        geoPanel.add(latitudeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 100, -1));

        heightField.setText("0.0");
        heightField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heightFieldActionPerformed(evt);
            }
        });
        heightField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                heightFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                heightFieldFocusLost(evt);
            }
        });
        heightField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                heightFieldMouseClicked(evt);
            }
        });

        geoPanel.add(heightField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 100, 20));

        jLabel17.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel17.setText("(m) AMSL");
        jLabel17.setToolTipText("(meters) Above Mean Sea Level");
        geoPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, -1, -1));

        jLabel171.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel171.setText("Degrees");
        geoPanel.add(jLabel171, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));

        jLabel172.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel172.setText("Degrees");
        geoPanel.add(jLabel172, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, -1, -1));

        jPanel1.add(geoPanel, "geoCard");

        ecefPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ecefPanel.setBorder(new javax.swing.border.TitledBorder("ECEF Coordinates"));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("X");
        ecefPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 30, 21));

        XField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XFieldActionPerformed(evt);
            }
        });
        XField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                XFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                XFieldFocusLost(evt);
            }
        });
        XField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                XFieldMouseClicked(evt);
            }
        });

        ecefPanel.add(XField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 141, 20));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Y");
        ecefPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 30, 21));

        YField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YFieldActionPerformed(evt);
            }
        });
        YField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                YFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                YFieldFocusLost(evt);
            }
        });
        YField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                YFieldMouseClicked(evt);
            }
        });

        ecefPanel.add(YField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 141, 20));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Z");
        ecefPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 30, 21));

        ZField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZFieldActionPerformed(evt);
            }
        });
        ZField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ZFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ZFieldFocusLost(evt);
            }
        });
        ZField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ZFieldMouseClicked(evt);
            }
        });

        ecefPanel.add(ZField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 141, 21));

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel16.setText("Meters");
        ecefPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, -1, -1));

        jLabel161.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel161.setText("Meters");
        ecefPanel.add(jLabel161, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, -1, -1));

        jLabel162.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel162.setText("Meters");
        ecefPanel.add(jLabel162, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, -1, -1));

        jPanel1.add(ecefPanel, "ecefCard");

        geoPanelDMS.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        geoPanelDMS.setBorder(new javax.swing.border.TitledBorder("Geodetic Coordinates"));
        jLabel7.setText("Latitude");
        geoPanelDMS.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel8.setText("Longitude");
        geoPanelDMS.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLabel9.setText("Height");
        geoPanelDMS.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 40, -1));

        longitudeDegreesField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                longitudeDegreesFieldActionPerformed(evt);
            }
        });
        longitudeDegreesField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                longitudeDegreesFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                longitudeDegreesFieldFocusLost(evt);
            }
        });
        longitudeDegreesField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                longitudeDegreesFieldMouseClicked(evt);
            }
        });

        geoPanelDMS.add(longitudeDegreesField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 30, -1));

        longitudeMinutesField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                longitudeMinutesFieldActionPerformed(evt);
            }
        });
        longitudeMinutesField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                longitudeMinutesFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                longitudeMinutesFieldFocusLost(evt);
            }
        });
        longitudeMinutesField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                longitudeMinutesFieldMouseClicked(evt);
            }
        });

        geoPanelDMS.add(longitudeMinutesField, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 30, -1));

        longitudeSecondsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                longitudeSecondsFieldActionPerformed(evt);
            }
        });
        longitudeSecondsField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                longitudeSecondsFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                longitudeSecondsFieldFocusLost(evt);
            }
        });
        longitudeSecondsField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                longitudeSecondsFieldMouseClicked(evt);
            }
        });

        geoPanelDMS.add(longitudeSecondsField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 40, -1));

        jLabel10.setText("D");
        geoPanelDMS.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, -1, 20));

        jLabel11.setText("M");
        geoPanelDMS.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, 20));

        jLabel12.setText("S");
        geoPanelDMS.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 10, 20));

        latitudeDegreesField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latitudeDegreesFieldActionPerformed(evt);
            }
        });
        latitudeDegreesField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                latitudeDegreesFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                latitudeDegreesFieldFocusLost(evt);
            }
        });
        latitudeDegreesField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                latitudeDegreesFieldMouseClicked(evt);
            }
        });

        geoPanelDMS.add(latitudeDegreesField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 30, -1));

        latitudeMinutesField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latitudeMinutesFieldActionPerformed(evt);
            }
        });
        latitudeMinutesField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                latitudeMinutesFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                latitudeMinutesFieldFocusLost(evt);
            }
        });
        latitudeMinutesField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                latitudeMinutesFieldMouseClicked(evt);
            }
        });

        geoPanelDMS.add(latitudeMinutesField, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 30, -1));

        latitudeSecondsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latitudeSecondsFieldActionPerformed(evt);
            }
        });
        latitudeSecondsField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                latitudeSecondsFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                latitudeSecondsFieldFocusLost(evt);
            }
        });
        latitudeSecondsField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                latitudeSecondsFieldMouseClicked(evt);
            }
        });

        geoPanelDMS.add(latitudeSecondsField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 40, -1));

        heightDMSField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heightDMSFieldActionPerformed(evt);
            }
        });
        heightDMSField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                heightDMSFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                heightDMSFieldFocusLost(evt);
            }
        });
        heightDMSField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                heightDMSFieldMouseClicked(evt);
            }
        });

        geoPanelDMS.add(heightDMSField, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 100, -1));

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 11));
        jLabel15.setText("(m) AMSL");
        jLabel15.setToolTipText("(meters) Above Mean Sea Level");
        geoPanelDMS.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, -1, -1));

        buttonGroup4.add(latitudeNorthDirection);
        latitudeNorthDirection.setFont(new java.awt.Font("Dialog", 0, 11));
        latitudeNorthDirection.setSelected(true);
        latitudeNorthDirection.setText("N");
        latitudeNorthDirection.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        latitudeNorthDirection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latitudeNorthDirectionActionPerformed(evt);
            }
        });

        geoPanelDMS.add(latitudeNorthDirection, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 40, 20));

        buttonGroup4.add(latitudeSouthDirection);
        latitudeSouthDirection.setFont(new java.awt.Font("Dialog", 0, 11));
        latitudeSouthDirection.setText("S");
        latitudeSouthDirection.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        latitudeSouthDirection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latitudeSouthDirectionActionPerformed(evt);
            }
        });

        geoPanelDMS.add(latitudeSouthDirection, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 40, 20));

        buttonGroup5.add(longitudeEastDirection);
        longitudeEastDirection.setFont(new java.awt.Font("Dialog", 0, 11));
        longitudeEastDirection.setSelected(true);
        longitudeEastDirection.setText("E");
        longitudeEastDirection.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        longitudeEastDirection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                longitudeEastDirectionActionPerformed(evt);
            }
        });

        geoPanelDMS.add(longitudeEastDirection, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 40, 20));

        buttonGroup5.add(longitudeWestDirection);
        longitudeWestDirection.setFont(new java.awt.Font("Dialog", 0, 11));
        longitudeWestDirection.setText("W");
        longitudeWestDirection.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        longitudeWestDirection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                longitudeWestDirectionActionPerformed(evt);
            }
        });

        geoPanelDMS.add(longitudeWestDirection, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 40, 20));

        jPanel1.add(geoPanelDMS, "dmsCard");

        add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setLayout(new java.awt.GridLayout(2, 1));

        jPanel3.setBorder(new javax.swing.border.TitledBorder("Input Type"));
        buttonGroup2.add(geodeticButton);
        geodeticButton.setFont(new java.awt.Font("Dialog", 0, 11));
        geodeticButton.setSelected(true);
        geodeticButton.setText("Geodetic");
        geodeticButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geodeticButtonActionPerformed(evt);
            }
        });

        jPanel3.add(geodeticButton);

        buttonGroup2.add(ecefButton);
        ecefButton.setFont(new java.awt.Font("Dialog", 0, 11));
        ecefButton.setText("ECEF");
        ecefButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ecefButtonActionPerformed(evt);
            }
        });

        jPanel3.add(ecefButton);

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 60));

        jPanel4.setLayout(new java.awt.GridLayout(2, 1));

        jPanel4.setBorder(new javax.swing.border.TitledBorder("Longitude"));
        buttonGroup3.add(positiveButton);
        positiveButton.setFont(new java.awt.Font("Dialog", 0, 11));
        positiveButton.setText("0 to 360");
        positiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positiveButtonActionPerformed(evt);
            }
        });

        jPanel4.add(positiveButton);

        buttonGroup3.add(posnegButton);
        posnegButton.setFont(new java.awt.Font("Dialog", 0, 11));
        posnegButton.setSelected(true);
        posnegButton.setText("-180 to 180");
        posnegButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posnegButtonActionPerformed(evt);
            }
        });

        jPanel4.add(posnegButton);

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, -1, 100, 60));

        jPanel5.setLayout(new java.awt.GridLayout(2, 1));

        jPanel5.setBorder(new javax.swing.border.TitledBorder("Display Type"));
        buttonGroup1.add(decimalButton);
        decimalButton.setFont(new java.awt.Font("Dialog", 0, 11));
        decimalButton.setSelected(true);
        decimalButton.setText("Decimal");
        decimalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalButtonActionPerformed(evt);
            }
        });

        jPanel5.add(decimalButton);

        buttonGroup1.add(dmsButton);
        dmsButton.setFont(new java.awt.Font("Dialog", 0, 11));
        dmsButton.setText("DMS");
        dmsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dmsButtonActionPerformed(evt);
            }
        });

        jPanel5.add(dmsButton);

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 0, 80, 60));

        add(jPanel2, java.awt.BorderLayout.NORTH);

    }//GEN-END:initComponents

    private void heightDMSFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_heightDMSFieldFocusLost
        heightDMSField.postActionEvent();
    }//GEN-LAST:event_heightDMSFieldFocusLost

    private void longitudeSecondsFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_longitudeSecondsFieldFocusLost
        longitudeSecondsField.postActionEvent();
    }//GEN-LAST:event_longitudeSecondsFieldFocusLost

    private void longitudeMinutesFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_longitudeMinutesFieldFocusLost
        longitudeMinutesField.postActionEvent();
    }//GEN-LAST:event_longitudeMinutesFieldFocusLost

    private void longitudeDegreesFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_longitudeDegreesFieldFocusLost
        longitudeDegreesField.postActionEvent();
    }//GEN-LAST:event_longitudeDegreesFieldFocusLost

    private void latitudeSecondsFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_latitudeSecondsFieldFocusLost
        latitudeSecondsField.postActionEvent();
    }//GEN-LAST:event_latitudeSecondsFieldFocusLost

    private void latitudeMinutesFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_latitudeMinutesFieldFocusLost
        latitudeMinutesField.postActionEvent();
    }//GEN-LAST:event_latitudeMinutesFieldFocusLost

    private void latitudeDegreesFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_latitudeDegreesFieldFocusLost
        latitudeDegreesField.postActionEvent();
    }//GEN-LAST:event_latitudeDegreesFieldFocusLost

    private void ZFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ZFieldFocusLost
        ZField.postActionEvent();
    }//GEN-LAST:event_ZFieldFocusLost

    private void YFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_YFieldFocusLost
        YField.postActionEvent();
    }//GEN-LAST:event_YFieldFocusLost

    private void XFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_XFieldFocusLost
        XField.postActionEvent();
    }//GEN-LAST:event_XFieldFocusLost

    private void longitudeFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_longitudeFieldFocusLost
       longitudeField.postActionEvent();
    }//GEN-LAST:event_longitudeFieldFocusLost

    private void heightFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_heightFieldFocusLost
        heightField.postActionEvent();
    }//GEN-LAST:event_heightFieldFocusLost

    private void latitudeFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_latitudeFieldFocusLost
        latitudeField.postActionEvent();
    }//GEN-LAST:event_latitudeFieldFocusLost

    private void heightDMSFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_heightDMSFieldMouseClicked
         heightDMSField.selectAll();
    }//GEN-LAST:event_heightDMSFieldMouseClicked

    private void heightDMSFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_heightDMSFieldFocusGained
        heightDMSField.selectAll();
    }//GEN-LAST:event_heightDMSFieldFocusGained

    private void longitudeSecondsFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_longitudeSecondsFieldMouseClicked
        longitudeSecondsField.selectAll();
    }//GEN-LAST:event_longitudeSecondsFieldMouseClicked

    private void longitudeSecondsFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_longitudeSecondsFieldFocusGained
        longitudeSecondsField.selectAll();
    }//GEN-LAST:event_longitudeSecondsFieldFocusGained

    private void longitudeMinutesFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_longitudeMinutesFieldMouseClicked
        longitudeMinutesField.selectAll();
    }//GEN-LAST:event_longitudeMinutesFieldMouseClicked

    private void longitudeMinutesFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_longitudeMinutesFieldFocusGained
        longitudeMinutesField.selectAll();
    }//GEN-LAST:event_longitudeMinutesFieldFocusGained

    private void longitudeDegreesFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_longitudeDegreesFieldMouseClicked
        longitudeDegreesField.selectAll();
    }//GEN-LAST:event_longitudeDegreesFieldMouseClicked

    private void longitudeDegreesFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_longitudeDegreesFieldFocusGained
        longitudeDegreesField.selectAll();
    }//GEN-LAST:event_longitudeDegreesFieldFocusGained

    private void latitudeSecondsFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_latitudeSecondsFieldMouseClicked
        latitudeSecondsField.selectAll();
    }//GEN-LAST:event_latitudeSecondsFieldMouseClicked

    private void latitudeSecondsFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_latitudeSecondsFieldFocusGained
        latitudeSecondsField.selectAll();
    }//GEN-LAST:event_latitudeSecondsFieldFocusGained

    private void latitudeMinutesFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_latitudeMinutesFieldMouseClicked
        latitudeMinutesField.selectAll();
    }//GEN-LAST:event_latitudeMinutesFieldMouseClicked

    private void latitudeMinutesFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_latitudeMinutesFieldFocusGained
        latitudeMinutesField.selectAll();
    }//GEN-LAST:event_latitudeMinutesFieldFocusGained

    private void latitudeDegreesFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_latitudeDegreesFieldMouseClicked
        latitudeDegreesField.selectAll();
    }//GEN-LAST:event_latitudeDegreesFieldMouseClicked

    private void latitudeDegreesFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_latitudeDegreesFieldFocusGained
        latitudeDegreesField.selectAll();
    }//GEN-LAST:event_latitudeDegreesFieldFocusGained

    private void ZFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ZFieldMouseClicked
        ZField.selectAll();
    }//GEN-LAST:event_ZFieldMouseClicked

    private void ZFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ZFieldFocusGained
        ZField.selectAll();
    }//GEN-LAST:event_ZFieldFocusGained

    private void YFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YFieldMouseClicked
        YField.selectAll();
    }//GEN-LAST:event_YFieldMouseClicked

    private void YFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_YFieldFocusGained
        YField.selectAll();
    }//GEN-LAST:event_YFieldFocusGained

    private void XFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_XFieldFocusGained
        XField.selectAll();
    }//GEN-LAST:event_XFieldFocusGained

    private void XFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_XFieldMouseClicked
        XField.selectAll();
    }//GEN-LAST:event_XFieldMouseClicked

    private void heightFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_heightFieldMouseClicked
        heightField.selectAll();
    }//GEN-LAST:event_heightFieldMouseClicked

    private void heightFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_heightFieldFocusGained
        heightField.selectAll();
    }//GEN-LAST:event_heightFieldFocusGained

    private void longitudeFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_longitudeFieldMouseClicked
        longitudeField.selectAll();
    }//GEN-LAST:event_longitudeFieldMouseClicked

    private void longitudeFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_longitudeFieldFocusGained
        longitudeField.selectAll();
    }//GEN-LAST:event_longitudeFieldFocusGained

    private void latitudeFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_latitudeFieldMouseClicked
        latitudeField.selectAll();
    }//GEN-LAST:event_latitudeFieldMouseClicked

    private void latitudeFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_latitudeFieldFocusGained
        latitudeField.selectAll();
    }//GEN-LAST:event_latitudeFieldFocusGained

    private void longitudeWestDirectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_longitudeWestDirectionActionPerformed
        try{
            this.setLongitudeDirection(WEST);
        }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Longitude Direction",
            javax.swing.JOptionPane.ERROR_MESSAGE);   
        }
    }//GEN-LAST:event_longitudeWestDirectionActionPerformed

    private void longitudeEastDirectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_longitudeEastDirectionActionPerformed
        try{
            this.setLongitudeDirection(EAST);
        }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Longitude Direction",
            javax.swing.JOptionPane.ERROR_MESSAGE);   
        }
    }//GEN-LAST:event_longitudeEastDirectionActionPerformed

    private void latitudeSouthDirectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latitudeSouthDirectionActionPerformed
        try{
            this.setLatitudeDirection(SOUTH);
        }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Latitude Direction",
            javax.swing.JOptionPane.ERROR_MESSAGE);   
        }
    }//GEN-LAST:event_latitudeSouthDirectionActionPerformed

    private void latitudeNorthDirectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latitudeNorthDirectionActionPerformed
        try{
            this.setLatitudeDirection(NORTH);
        }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Latitude Direction",
            javax.swing.JOptionPane.ERROR_MESSAGE);   
        }
    }//GEN-LAST:event_latitudeNorthDirectionActionPerformed

    private void heightDMSFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heightDMSFieldActionPerformed
        try{
            double height = Double.parseDouble(heightDMSField.getText());
            this.setHeightAMSL(height);
        }catch(NumberFormatException nfe){
            javax.swing.JOptionPane.showMessageDialog(this,
            "Height must be a double value",
            "Error setting Height",
            javax.swing.JOptionPane.ERROR_MESSAGE);
           heightDMSField.setText(String.valueOf(heightAMSL));
           heightDMSField.requestFocusInWindow();
        }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Height",
            javax.swing.JOptionPane.ERROR_MESSAGE);  
          heightDMSField.setText(String.valueOf(heightAMSL));
          heightDMSField.requestFocusInWindow();
        }
    }//GEN-LAST:event_heightDMSFieldActionPerformed

    private void longitudeSecondsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_longitudeSecondsFieldActionPerformed
      try{
          double lonSec = Double.parseDouble(longitudeSecondsField.getText());
          this.setLongitudeSeconds(lonSec);
      }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Longitude Seconds",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          longitudeSecondsField.setText(String.valueOf(longitudeSeconds));
          longitudeSecondsField.requestFocusInWindow();
      }catch(NumberFormatException nfe){
           javax.swing.JOptionPane.showMessageDialog(this,
            "Longitude seconds must be a double value",
            "Error setting Longitude Seconds",
            javax.swing.JOptionPane.ERROR_MESSAGE);
           longitudeSecondsField.setText(String.valueOf(longitudeSeconds));
           longitudeSecondsField.requestFocusInWindow();
      }
    }//GEN-LAST:event_longitudeSecondsFieldActionPerformed

    private void longitudeMinutesFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_longitudeMinutesFieldActionPerformed
      try{
          int lonMin = Integer.parseInt(longitudeMinutesField.getText());
          this.setLongitudeMinutes(lonMin);
      }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Longitude Minutes",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          longitudeMinutesField.setText(String.valueOf(longitudeMinutes));
          longitudeMinutesField.requestFocusInWindow();
      }catch(NumberFormatException nfe){
           javax.swing.JOptionPane.showMessageDialog(this,
            "Longitude minutes must be an integer value",
            "Error setting Longitude Minutes",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          longitudeMinutesField.setText(String.valueOf(longitudeMinutes));
          longitudeMinutesField.requestFocusInWindow();
      }
    }//GEN-LAST:event_longitudeMinutesFieldActionPerformed

    private void longitudeDegreesFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_longitudeDegreesFieldActionPerformed
      try{
          int lonDeg = Integer.parseInt(longitudeDegreesField.getText());
          this.setLongitudeDegrees(lonDeg);
      }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Longitude Degrees",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          longitudeDegreesField.setText(String.valueOf(longitudeDegrees));
          longitudeDegreesField.requestFocusInWindow();
      }catch(NumberFormatException nfe){
           javax.swing.JOptionPane.showMessageDialog(this,
            "Longitude degrees must be an integer value",
            "Error setting Longitude Degrees",
            javax.swing.JOptionPane.ERROR_MESSAGE);
           longitudeDegreesField.setText(String.valueOf(longitudeDegrees));
           longitudeDegreesField.requestFocusInWindow();
      }
    }//GEN-LAST:event_longitudeDegreesFieldActionPerformed

    private void latitudeSecondsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latitudeSecondsFieldActionPerformed
      try{
          double latSec = Double.parseDouble(latitudeSecondsField.getText());
          this.setLatitudeSeconds(latSec);
      }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Latitude Seconds",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          latitudeSecondsField.setText(String.valueOf(latitudeSeconds));
          latitudeSecondsField.requestFocusInWindow();
      }catch(NumberFormatException nfe){
           javax.swing.JOptionPane.showMessageDialog(this,
            "Latitude seconds must be a double value",
            "Error setting Latitude Seconds",
            javax.swing.JOptionPane.ERROR_MESSAGE);
           latitudeSecondsField.setText(String.valueOf(latitudeSeconds));
          latitudeSecondsField.requestFocusInWindow();
      }
    }//GEN-LAST:event_latitudeSecondsFieldActionPerformed

    private void latitudeMinutesFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latitudeMinutesFieldActionPerformed
      try{
          int latMin = Integer.parseInt(latitudeMinutesField.getText());
          this.setLatitudeMinutes(latMin);
      }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Latitude Minutes",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          latitudeMinutesField.setText(String.valueOf(latitudeMinutes));
          latitudeMinutesField.requestFocusInWindow();
      }catch(NumberFormatException nfe){
           javax.swing.JOptionPane.showMessageDialog(this,
            "Latitude minutes must be an integer value",
            "Error setting Latitude Minutes",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          latitudeMinutesField.setText(String.valueOf(latitudeMinutes));
          latitudeMinutesField.requestFocusInWindow(); 
      }
    }//GEN-LAST:event_latitudeMinutesFieldActionPerformed

    private void ZFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZFieldActionPerformed
      try{
          double Z = Double.parseDouble(ZField.getText());
          this.setECEF_Z(Z);
      }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Z Coordinate",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          ZField.setText(String.valueOf(ECEF_Z));
          ZField.requestFocusInWindow();
      }catch(NumberFormatException nfe){
           javax.swing.JOptionPane.showMessageDialog(this,
            "Z Coordinate must be a double value",
            "Error setting Z Coordinate",
            javax.swing.JOptionPane.ERROR_MESSAGE);
           ZField.setText(String.valueOf(ECEF_Z));
           ZField.requestFocusInWindow();
      }
    }//GEN-LAST:event_ZFieldActionPerformed

    private void YFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YFieldActionPerformed
      try{
          double Y = Double.parseDouble(YField.getText());
          this.setECEF_Y(Y);
      }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Y Coordinate",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          YField.setText(String.valueOf(ECEF_Y));
          YField.requestFocusInWindow();
      }catch(NumberFormatException nfe){
           javax.swing.JOptionPane.showMessageDialog(this,
            "Y Coordinate must be a double value",
            "Error setting Y Coordinate",
            javax.swing.JOptionPane.ERROR_MESSAGE);
           YField.setText(String.valueOf(ECEF_Y));
           YField.requestFocusInWindow();
      }
    }//GEN-LAST:event_YFieldActionPerformed

    private void XFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XFieldActionPerformed
      try{
          double X = Double.parseDouble(XField.getText());
          this.setECEF_X(X);
      }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting X Coordinate",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          XField.setText(String.valueOf(ECEF_X));
          XField.requestFocusInWindow();
      }catch(NumberFormatException nfe){
           javax.swing.JOptionPane.showMessageDialog(this,
            "X Coordinate must be a double value",
            "Error setting X Coordinate",
            javax.swing.JOptionPane.ERROR_MESSAGE);
           XField.setText(String.valueOf(ECEF_X));
           XField.requestFocusInWindow();
      }
    }//GEN-LAST:event_XFieldActionPerformed

    private void heightFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heightFieldActionPerformed
      try{
          double alt = Double.parseDouble(heightField.getText());
          this.setHeightAMSL(alt);
      }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Height",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          heightField.setText(String.valueOf(heightAMSL));
          heightField.requestFocusInWindow();
      }catch(NumberFormatException nfe){
           javax.swing.JOptionPane.showMessageDialog(this,
            "X Coordinate must be a double value",
            "Error setting X Coordinate",
            javax.swing.JOptionPane.ERROR_MESSAGE);
           heightField.setText(String.valueOf(heightAMSL));
           heightField.requestFocusInWindow();
      }
    }//GEN-LAST:event_heightFieldActionPerformed

    private void latitudeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latitudeFieldActionPerformed
      try{
          double lat = Double.parseDouble(latitudeField.getText());
          this.setLatitude(lat);
      }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Latitude Validation",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          latitudeField.setText(String.valueOf(latitude));
          latitudeField.requestFocusInWindow();
      }catch(NumberFormatException nfe){
           javax.swing.JOptionPane.showMessageDialog(this,
            "Latitude must be a double value",
            "Not A Number",
            javax.swing.JOptionPane.ERROR_MESSAGE);
           latitudeField.setText(String.valueOf(latitude));
           latitudeField.requestFocusInWindow();
      }
    }//GEN-LAST:event_latitudeFieldActionPerformed

    private void latitudeDegreesFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latitudeDegreesFieldActionPerformed
    try{
          int latDeg = Integer.parseInt(latitudeDegreesField.getText());
          this.setLatitudeDegrees(latDeg);
      }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Latitude Degrees",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          latitudeDegreesField.setText(String.valueOf(latitudeDegrees));
          latitudeDegreesField.requestFocusInWindow();
      }catch(NumberFormatException nfe){
           javax.swing.JOptionPane.showMessageDialog(this,
            "Latitude degrees must be an integer value",
            "Error setting Latitude Degrees",
            javax.swing.JOptionPane.ERROR_MESSAGE);
           latitudeDegreesField.setText(String.valueOf(latitudeDegrees));
           latitudeDegreesField.requestFocusInWindow();
      }      
    }//GEN-LAST:event_latitudeDegreesFieldActionPerformed

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        updateValues(evt);
    }//GEN-LAST:event_formPropertyChange

    private void formVetoableChange(java.beans.PropertyChangeEvent evt) throws java.beans.PropertyVetoException {//GEN-FIRST:event_formVetoableChange
        // move all of the NFE exceptions to their respective actionEvent Handlers
        String changed = evt.getPropertyName();
        if(changed == "Latitude"){   
            double lat = ((Double)evt.getNewValue()).doubleValue();
            if (lat < -90.0 || lat > 90.0) throw new java.beans.PropertyVetoException("Latitudes must be between -90.0 and 90.0 degrees", evt);
        }else if (changed == "Longitude"){
            double lon = ((Double)evt.getNewValue()).doubleValue();
            if(LONGITUDE_TYPE == POSITIVE){
                if (lon < 0.0 || lon >= 360.0) throw new java.beans.PropertyVetoException("Longitudes must be positive and less than 360.0 degrees", evt);
            }else if(LONGITUDE_TYPE == POSNEG){
                if (lon < -180.0 || lon >= 180.0) throw new java.beans.PropertyVetoException("Longitudes must be between -180.0 and less than 180.0 degrees", evt);
            }
        }else if(changed == "HeightAMSL"){
            // just need to check for valid number
            double alt = ((Double)evt.getNewValue()).doubleValue();
            if (alt < -T_Utilities.EarthEquatorialRadius) 
                throw new java.beans.PropertyVetoException("Heights must be greater than: " + -T_Utilities.EarthEquatorialRadius
                 + " (Earth's Equatorial Radius)", evt);
        }else if(changed == "ECEF_X"){
            // just need to check for valid number
            // nothing to do here really use the following if you need to check the value though
            //double X = ((Double)evt.getNewValue()).doubleValue();
        }else if (changed == "ECEF_Y"){
            // just need to check for valid number
            // nothing to do here really use the following if you need to check the value though
            //double X = ((Double)evt.getNewValue()).doubleValue();
        }else if (changed == "ECEF_Z"){
            // just need to check for valid number
            // nothing to do here really use the following if you need to check the value though
            //double X = ((Double)evt.getNewValue()).doubleValue();
        }else if (changed == "latitudeDegrees"){
            // just need to check for valid number
            // Check just the magnitude of latitude degrees here...the sign doesn't matter
            int latDeg = ((Integer)evt.getNewValue()).intValue();
            if (latDeg < 0 || latDeg > 90) throw new java.beans.PropertyVetoException("Latitude degrees must be between 0 and 90 degrees", evt);
        }else if (changed == "latitudeMinutes"){
            // just need to check for valid number
            int latMin = ((Integer)evt.getNewValue()).intValue();
            if (latMin < 0 || latMin >= 60) throw new java.beans.PropertyVetoException("Latitude minutes must be between 0 and 60 minutes", evt);
        }else if (changed == "latitudeSeconds"){
            // just need to check for valid number
            double latSec = ((Double)evt.getNewValue()).doubleValue();
            if (latSec < 0.0 || latSec >= 60.0) throw new java.beans.PropertyVetoException("Latitude seconds must be between 0 and 60 seconds", evt);
        }else if (changed == "latitudeDirection"){
           if((latitudeDirection != NORTH) && (latitudeDirection != SOUTH)) 
               throw new java.beans.PropertyVetoException("Latitude Direction must be either NORTH or SOUTH", evt);
        }else if (changed == "longitudeDegrees"){
            // just need to check for valid number
            int lonDeg = ((Integer)evt.getNewValue()).intValue();
            if(LONGITUDE_TYPE == POSITIVE) { // longitude must be positive
                if(lonDeg < 0 || lonDeg >= 360) throw new java.beans.PropertyVetoException("Longitude degrees must be between 0 and 360 degrees", evt);
            }else if(LONGITUDE_TYPE == POSNEG){ // must be between -180 and 180
                if (lonDeg < -180 || lonDeg >= 180) throw new java.beans.PropertyVetoException("Longitude degrees must be between -180 and 180 degrees", evt);
            }
        }else if (changed == "longitudeMinutes"){
            // just need to check for valid number
            int lonMin = ((Integer)evt.getNewValue()).intValue();
            if (lonMin < 0 || lonMin >= 60) throw new java.beans.PropertyVetoException("Longitude minutes must be between 0 and 60 minutes", evt);
        }else if (changed == "longitudeSeconds"){
            // just need to check for valid number
            double lonSec = ((Double)evt.getNewValue()).doubleValue();
            if (lonSec < 0.0 || lonSec >= 60.0) throw new java.beans.PropertyVetoException("Longitude seconds must be between 0 and 60 seconds", evt);
        }else if (changed == "longitudeDirection"){
           int dir = ((Integer)evt.getNewValue()).intValue();
           if((dir != EAST) && (dir != WEST)) 
               throw new java.beans.PropertyVetoException("Longitude Direction must be either EAST or WEST", evt);
           if(LONGITUDE_TYPE == POSITIVE){
               if(dir == WEST){
                   longitudeEastDirection.setSelected(true);
                   throw new java.beans.PropertyVetoException("Longitude Direction must be EAST in this mode.", evt);
               }
           }
        }
    }//GEN-LAST:event_formVetoableChange

    private void posnegButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posnegButtonActionPerformed
        LONGITUDE_TYPE = POSNEG;
        calculateDMSFromLongitude();
        updateDisplay();
    }//GEN-LAST:event_posnegButtonActionPerformed

    private void positiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positiveButtonActionPerformed
        LONGITUDE_TYPE = POSITIVE;
        // have to update the longitude degrees and direction here
        calculateDMSFromLongitude();        
        updateDisplay();
    }//GEN-LAST:event_positiveButtonActionPerformed

    private void dmsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dmsButtonActionPerformed
        DISPLAY_TYPE = DMS;
       ((CardLayout)jPanel1.getLayout()).show(jPanel1,"dmsCard");;
        updateDisplay();
    }//GEN-LAST:event_dmsButtonActionPerformed

    private void decimalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalButtonActionPerformed
        DISPLAY_TYPE = DECIMAL;
        CardLayout cl = (CardLayout)jPanel1.getLayout();
        cl.show(jPanel1,"geoCard");
        updateDisplay();
    }//GEN-LAST:event_decimalButtonActionPerformed

    private void ecefButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ecefButtonActionPerformed
        INPUT_TYPE = ECEF;
        ((CardLayout)jPanel1.getLayout()).show(jPanel1,"ecefCard");
        decimalButton.setEnabled(false);
        dmsButton.setEnabled(false);
        positiveButton.setEnabled(false);
        posnegButton.setEnabled(false);
        updateDisplay();
    }//GEN-LAST:event_ecefButtonActionPerformed

    private void geodeticButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geodeticButtonActionPerformed
        INPUT_TYPE = GEODETIC;
        if(DISPLAY_TYPE == DECIMAL){
            ((CardLayout)jPanel1.getLayout()).show(jPanel1,"geoCard");
        }else{
            ((CardLayout)jPanel1.getLayout()).show(jPanel1,"dmsCard");
        }
        decimalButton.setEnabled(true);
        dmsButton.setEnabled(true);
        positiveButton.setEnabled(true);
        posnegButton.setEnabled(true);
        updateDisplay(); // is this needed here?
    }//GEN-LAST:event_geodeticButtonActionPerformed

    private void longitudeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_longitudeFieldActionPerformed
      try{
          double lon = Double.parseDouble(longitudeField.getText());
          this.setLongitude(lon);
      }catch(java.beans.PropertyVetoException pve){
          javax.swing.JOptionPane.showMessageDialog(this,
            pve.getMessage(),
            "Error setting Longitude",
            javax.swing.JOptionPane.ERROR_MESSAGE);
          longitudeField.setText(String.valueOf(longitude));
          longitudeField.requestFocusInWindow();
      }catch(NumberFormatException nfe){
           javax.swing.JOptionPane.showMessageDialog(this,
            "Longitude must be a double value",
            "Error setting Longitude",
            javax.swing.JOptionPane.ERROR_MESSAGE);
           longitudeField.setText(String.valueOf(longitude));
           longitudeField.requestFocusInWindow();
      }
    }//GEN-LAST:event_longitudeFieldActionPerformed

    private void updateDisplay() {
        // update display parameters here
        java.text.DecimalFormat df = new java.text.DecimalFormat("0.000000");
        java.text.DecimalFormat heightFM = new java.text.DecimalFormat("0.00000");
        java.text.DecimalFormat minf = new java.text.DecimalFormat("00");
        java.text.DecimalFormat londf = new java.text.DecimalFormat("000");
        java.text.DecimalFormat secsf = new java.text.DecimalFormat("0.00");
        java.text.DecimalFormat latf = new java.text.DecimalFormat("00.000000");
        java.text.DecimalFormat lonf = new java.text.DecimalFormat("000.000000");
        
        XField.setText(df.format(ECEF_X));
        YField.setText(df.format(ECEF_Y));
        ZField.setText(df.format(ECEF_Z));

        latitudeField.setText(latf.format(latitude));
        
        
        //System.out.println("Longitude = " + longitude);
        double tempLong = longitude;
        if(LONGITUDE_TYPE == POSITIVE){
            longitudeField.setText(lonf.format(T_Utilities.normalize(0,360,tempLong)));
        }else{
            longitudeField.setText(lonf.format(T_Utilities.normalize(-180,180,tempLong)));     
        }
        
        heightField.setText(heightFM.format(heightAMSL));
        
        latitudeDegreesField.setText(minf.format(latitudeDegrees));
        latitudeMinutesField.setText(minf.format(latitudeMinutes));
        latitudeSecondsField.setText(secsf.format(latitudeSeconds));
        
        longitudeDegreesField.setText(londf.format(longitudeDegrees));
        longitudeMinutesField.setText(minf.format(longitudeMinutes));
        longitudeSecondsField.setText(secsf.format(longitudeSeconds));
        
        heightDMSField.setText(heightFM.format(heightAMSL));
        
        // check latitude sign
        if(latitudeDirection == NORTH) latitudeNorthDirection.setSelected(true);
        else latitudeSouthDirection.setSelected(true);
              
        // check longitude sign
        if(LONGITUDE_TYPE == POSITIVE) longitudeEastDirection.setSelected(true);
        else{
                // longitude_Type must be POSNEG here
                if(longitudeDirection == EAST) longitudeEastDirection.setSelected(true);
                else longitudeWestDirection.setSelected(true);
            }
    }    
    
    /** Adds a PropertyChangeListener to the listener list.
     * @param l The listener to add.
     */
    public void addPropertyChangeListener(java.beans.PropertyChangeListener l) {
        propertyChangeSupport.addPropertyChangeListener(l);
    }    
    
    /** Removes a PropertyChangeListener from the listener list.
     * @param l The listener to remove.
     */
    public void removePropertyChangeListener(java.beans.PropertyChangeListener l) {
        propertyChangeSupport.removePropertyChangeListener(l);
    }
    
    /** Adds a VetoableChangeListener to the listener list.
     * @param l The listener to add.
     */
    public void addVetoableChangeListener(java.beans.VetoableChangeListener l) {
        vetoableChangeSupport.addVetoableChangeListener(l);
    }
    
    /** Removes a VetoableChangeListener from the listener list.
     * @param l The listener to remove.
     */
    public void removeVetoableChangeListener(java.beans.VetoableChangeListener l) {
        vetoableChangeSupport.removeVetoableChangeListener(l);
    }
    
    /** Getter for property latitude.
     * @return Value of property latitude.
     */
    public double getLatitude() {
        return this.latitude;
    }
    
    /** Setter for property latitude.
     * @param latitude New value of property latitude.
     *
     * @throws PropertyVetoException
     */
    public void setLatitude(double latitude) throws java.beans.PropertyVetoException {
        double oldLatitude = this.latitude;
        vetoableChangeSupport.fireVetoableChange("Latitude", oldLatitude, new Double(latitude));
        this.latitude = latitude;
        site.setLatitude(latitude);
        propertyChangeSupport.firePropertyChange("Latitude", oldLatitude, this.latitude);
    }
    
    /** Getter for property longitude.
     * @return Value of property longitude.
     */
    public double getLongitude() {
        return this.longitude;
    }
    
    /** Setter for property longitude.
     * @param longitude New value of property longitude.
     *
     * @throws PropertyVetoException
     */
    public void setLongitude(double longitude) throws java.beans.PropertyVetoException {
        double oldLongitude = this.longitude;
   //     System.out.println("in SetLongitude() before veto oldlongitude = " + oldLongitude + " new longitude = " + longitude);
        vetoableChangeSupport.fireVetoableChange("Longitude", oldLongitude, new Double(longitude));
   //     System.out.println("in SetLongitude() after veto longitude = " + longitude);
        this.longitude = T_Utilities.normalize(0.0,360.0,longitude); // keep longitude positive
   //     System.out.println("in SetLongitude() beafter normalize longitude = " + longitude);
        // update longitude fields here
        propertyChangeSupport.firePropertyChange("Longitude", oldLongitude,this.longitude);
   //     System.out.println("in SetLongitude() after property change longitude = " + longitude);
    }
    
    /** Getter for property height.
     * @return Value of property height.
     */
    public double getHeightAMSL() {
        return this.heightAMSL;
    }
    
    /** Setter for property height.
     * @param height New value of property height.
     *
     * @throws PropertyVetoException
     */
    public void setHeightAMSL(double heightAMSL) throws java.beans.PropertyVetoException {
        double oldHeightAMSL = this.heightAMSL;
        vetoableChangeSupport.fireVetoableChange("HeightAMSL", oldHeightAMSL, new Double(heightAMSL));
        this.heightAMSL = heightAMSL;
        // update HeightField here
        propertyChangeSupport.firePropertyChange("HeightAMSL", oldHeightAMSL, this.heightAMSL);
    }
    
    /** Getter for property ECEF_X.
     * @return Value of property ECEF_X.
     */
    public double getECEF_X() {
        return this.ECEF_X;
    }
    
    /** Setter for property ECEF_X.
     * @param ECEF_X New value of property ECEF_X.
     *
     * @throws PropertyVetoException
     */
    public void setECEF_X(double ECEF_X) throws java.beans.PropertyVetoException {
        double oldECEF_X = this.ECEF_X;
        vetoableChangeSupport.fireVetoableChange("ECEF_X", oldECEF_X, new Double(ECEF_X));
        this.ECEF_X = ECEF_X;
        // update ECEF_X Field here
        propertyChangeSupport.firePropertyChange("ECEF_X", oldECEF_X, this.ECEF_X);
    }
    
    /** Getter for property ECEF_Y.
     * @return Value of property ECEF_Y.
     */
    public double getECEF_Y() {
        return this.ECEF_Y;
    }
    
    /** Setter for property ECEF_Y.
     * @param ECEF_Y New value of property ECEF_Y.
     *
     * @throws PropertyVetoException
     */
    public void setECEF_Y(double ECEF_Y) throws java.beans.PropertyVetoException {
        double oldECEF_Y = this.ECEF_Y;
        vetoableChangeSupport.fireVetoableChange("ECEF_Y", oldECEF_Y, new Double(ECEF_Y));
        this.ECEF_Y = ECEF_Y;
        // update ECEF_Y Field here
        propertyChangeSupport.firePropertyChange("ECEF_Y", oldECEF_Y, this.ECEF_Y);
    }
    
    /** Getter for property ECEF_Z.
     * @return Value of property ECEF_Z.
     */
    public double getECEF_Z() {
        return this.ECEF_Z;
    }
    
    /** Setter for property ECEF_Z.
     * @param ECEF_Z New value of property ECEF_Z.
     *
     * @throws PropertyVetoException
     */
    public void setECEF_Z(double ECEF_Z) throws java.beans.PropertyVetoException {
        double oldECEF_Z = this.ECEF_Z;
        vetoableChangeSupport.fireVetoableChange("ECEF_Z", oldECEF_Z, new Double(ECEF_Z));
        this.ECEF_Z = ECEF_Z;
        // update ECEF_Z Field here
        propertyChangeSupport.firePropertyChange("ECEF_Z", oldECEF_Z, this.ECEF_Z);
    }
    
    /** Getter for property latitudeDegrees.
     * @return Value of property latitudeDegrees.
     */
    public int getLatitudeDegrees() {
        return latitudeDegrees;
    }
    
    /** Setter for property latitudeDegrees.
     * @param latitudeDegrees New value of property latitudeDegrees.
     *
     * @throws PropertyVetoException
     */
    public void setLatitudeDegrees(int latitudeDegrees) throws java.beans.PropertyVetoException {
        int oldLatitudeDegrees = this.latitudeDegrees;
        vetoableChangeSupport.fireVetoableChange("latitudeDegrees", new Integer(oldLatitudeDegrees), new Integer(latitudeDegrees));
        this.latitudeDegrees = latitudeDegrees;
        propertyChangeSupport.firePropertyChange("latitudeDegrees", oldLatitudeDegrees, this.latitudeDegrees);
    }
    
    /** Getter for property latitudeMinutes.
     * @return Value of property latitudeMinutes.
     */
    public int getLatitudeMinutes() {
        return latitudeMinutes;
    }
    
    /** Setter for property latitudeMinutes.
     * @param latitudeMinutes New value of property latitudeMinutes.
     *
     * @throws PropertyVetoException
     */
    public void setLatitudeMinutes(int latitudeMinutes) throws java.beans.PropertyVetoException {
        int oldLatitudeMinutes = this.latitudeMinutes;
        vetoableChangeSupport.fireVetoableChange("latitudeMinutes", new Integer(oldLatitudeMinutes), new Integer(latitudeMinutes));
        this.latitudeMinutes = latitudeMinutes;
        propertyChangeSupport.firePropertyChange("latitudeMinutes", oldLatitudeMinutes, this.latitudeMinutes);
    }
    
    /** Getter for property latitudeSeconds.
     * @return Value of property latitudeSeconds.
     */
    public double getLatitudeSeconds() {
        return latitudeSeconds;
    }
    
    /** Setter for property latitudeSeconds.
     * @param latitudeSeconds New value of property latitudeSeconds.
     *
     * @throws PropertyVetoException
     */
    public void setLatitudeSeconds(double latitudeSeconds) throws java.beans.PropertyVetoException {
        double oldLatitudeSeconds = this.latitudeSeconds;
        vetoableChangeSupport.fireVetoableChange("latitudeSeconds", new Double(oldLatitudeSeconds), new Double(latitudeSeconds));
        this.latitudeSeconds = latitudeSeconds;
        propertyChangeSupport.firePropertyChange("latitudeSeconds", oldLatitudeSeconds, this.latitudeSeconds);
    }
    
    /** Getter for property longitudeDegrees.
     * @return Value of property longitudeDegrees.
     */
    public int getLongitudeDegrees() {
        return longitudeDegrees;
    }
    
    /** Setter for property longitudeDegrees.
     * @param longitudeDegrees New value of property longitudeDegrees.
     *
     * @throws PropertyVetoException
     */
    public void setLongitudeDegrees(int longitudeDegrees) throws java.beans.PropertyVetoException {
        int oldLongitudeDegrees = this.longitudeDegrees;
        vetoableChangeSupport.fireVetoableChange("longitudeDegrees", new Integer(oldLongitudeDegrees), new Integer(longitudeDegrees));
        this.longitudeDegrees = longitudeDegrees;
        propertyChangeSupport.firePropertyChange("longitudeDegrees", oldLongitudeDegrees,this.longitudeDegrees);
    }
    
    /** Getter for property longitudeMinutes.
     * @return Value of property longitudeMinutes.
     */
    public int getLongitudeMinutes() {
        return longitudeMinutes;
    }
    
    /** Setter for property longitudeMinutes.
     * @param longitudeMinutes New value of property longitudeMinutes.
     *
     * @throws PropertyVetoException
     */
    public void setLongitudeMinutes(int longitudeMinutes) throws java.beans.PropertyVetoException {
        int oldLongitudeMinutes = this.longitudeMinutes;
        vetoableChangeSupport.fireVetoableChange("longitudeMinutes", new Integer(oldLongitudeMinutes), new Integer(longitudeMinutes));
        this.longitudeMinutes = longitudeMinutes;
        propertyChangeSupport.firePropertyChange("longitudeMinutes", oldLongitudeMinutes, this.longitudeMinutes);
    }
    
    /** Getter for property longitudeSeconds.
     * @return Value of property longitudeSeconds.
     */
    public double getLongitudeSeconds() {
        return longitudeSeconds;
    }
    
    /** Setter for property longitudeSeconds.
     * @param longitudeSeconds New value of property longitudeSeconds.
     *
     * @throws PropertyVetoException
     */
    public void setLongitudeSeconds(double longitudeSeconds) throws java.beans.PropertyVetoException {
        double oldLongitudeSeconds = this.longitudeSeconds;
        vetoableChangeSupport.fireVetoableChange("longitudeSeconds", oldLongitudeSeconds, new Double(longitudeSeconds));
        this.longitudeSeconds = longitudeSeconds;
        propertyChangeSupport.firePropertyChange("longitudeSeconds", oldLongitudeSeconds, this.longitudeSeconds);
    }
    
    /** Calculate the latitude from the degrees minutes seconds variables
     */
    private void calcLatitudeFromDMS(){
      try{
          latitudeDegrees = Integer.parseInt(latitudeDegreesField.getText());
          latitudeMinutes = Integer.parseInt(latitudeMinutesField.getText());
          latitudeSeconds = Double.parseDouble(latitudeSecondsField.getText());       
      }catch(NumberFormatException nfe){ // checked all this above, should be good by now
          javax.swing.JOptionPane.showMessageDialog(this,
            "Latitude Degrees and Minutes must be integers, and latitude Seconds must be a double",
            "Error setting Latitude",
            javax.swing.JOptionPane.ERROR_MESSAGE);
      }
      
      latitude = latitudeDegrees + latitudeMinutes/60.0 + latitudeSeconds/3600.0;
      latitude *= (double)latitudeDirection;      
    }
    
    /** Calculate the latitude DMS values 
     */
    private void calculateDMSFromLatitude(){
        // latitude has been set
        double lat = Math.abs(latitude);
        latitudeDegrees = T_Utilities.getIntOfDouble(lat);
        lat = T_Utilities.getDecimalOfDouble(lat)*60.0;
        latitudeMinutes = T_Utilities.getIntOfDouble(lat);
        lat = T_Utilities.getDecimalOfDouble(lat)*60.0;
        latitudeSeconds = lat;
        // Normalize DMS values
        if (latitudeSeconds >= 59.99){
            latitudeSeconds = 0;
            latitudeMinutes++;
            if(latitudeMinutes > 59){
                latitudeMinutes = 0;
                latitudeDegrees++;
            }
        }
        
        if(latitude < 0.0) latitudeDirection = SOUTH;
        else latitudeDirection = NORTH;        
    }
    
    /** Calculate the longitude from the degrees minutes seconds variables
     */
    private void calcLongitudeFromDMS(){
      try{
          longitudeDegrees = Integer.parseInt(longitudeDegreesField.getText());
          longitudeMinutes = Integer.parseInt(longitudeMinutesField.getText());
          longitudeSeconds = Double.parseDouble(longitudeSecondsField.getText());
          
      }catch(NumberFormatException nfe){ // checked all this above, should be good by now
          javax.swing.JOptionPane.showMessageDialog(this,
            "Longitude Degrees and Minutes must be integers, and longitude Seconds must be a double",
            "Error setting Longitude",
            javax.swing.JOptionPane.ERROR_MESSAGE);
      }
      longitude = longitudeDegrees + longitudeMinutes/60.0 + longitudeSeconds/3600.0;
      longitude *= (double)longitudeDirection;
    }
    
    /** Calculate the latitude DMS values 
     */
    private void calculateDMSFromLongitude(){
        // latitude has been set
        double lon = longitude;
        if (LONGITUDE_TYPE == POSNEG){
            if(longitude > 180.0) longitudeDirection = WEST; 
            else longitudeDirection = EAST;
            lon = Math.abs(T_Utilities.normalize(-180.0,180.0,lon,6));
            longitudeDegrees = T_Utilities.getIntOfDouble(lon);
            lon = T_Utilities.getDecimalOfDouble(lon)*60.0;
            longitudeMinutes = T_Utilities.getIntOfDouble(lon);
            lon = T_Utilities.getDecimalOfDouble(lon)*60.0;
            longitudeSeconds = lon;
            // Normalize DMS values
             if (longitudeSeconds >=59.99){
                 longitudeSeconds = 0.0;
                longitudeMinutes++;
                if(longitudeMinutes > 59){
                    longitudeMinutes = 0;
                    longitudeDegrees++;
                }
            }
        }else if (LONGITUDE_TYPE == POSITIVE){
            longitudeDirection = EAST;
            lon = T_Utilities.normalize(0.0,360.0,lon,6);
            longitudeDegrees = T_Utilities.getIntOfDouble(lon);
            lon = T_Utilities.getDecimalOfDouble(lon)*60.0;
            longitudeMinutes = T_Utilities.getIntOfDouble(lon);
            lon = T_Utilities.getDecimalOfDouble(lon)*60.0;
            longitudeSeconds = lon;
            // Normalize DMS values
             if (longitudeSeconds >= 60){
                longitudeMinutes++;
                if(longitudeMinutes >= 60){
                    longitudeDegrees++;
                }
            }
        }        
    }
    
    /** Updates the state variables in this class from the T_Site class
     */
    private void updateStates(){
        // all states have been set in the T_Site class, copy to the states in this class
        latitude = site.getLatitude()/T_Utilities.DtR;
        longitude = site.getLongitude()/T_Utilities.DtR;
        heightAMSL = site.getHeight();
        ECEF_X = site.getX();
        ECEF_Y = site.getY();
        ECEF_Z = site.getZ();
    }
    
    /** Updates the coordinate's values typically after a change
     */ 
    private void updateValues(java.beans.PropertyChangeEvent evt) {
        String prop = evt.getPropertyName();
        // base all updates on the property just changed
        // cases:
        // ECEF_X or ECEF_Y or ECEF_Z
        // longitude or latitude or height
        // lon minutes, degrees or seconds
        // lat degrees or minutes or seconds
        /* if any D M or S component is updated, calculate the full lat or long
         * then calculate the ECEF numbers
         *if any lat ot lon is updated, calculate the ECEFs then find the D M S quantities
         * If any ECEF is updated, compute the lat & lons then calculate the D M S quantities
         *
         */
        if (prop == "Latitude" ) {
            site.setLatitude(latitude*T_Utilities.DtR);
            // calculate the DMS numbers for latitude
            calculateDMSFromLatitude();
            updateStates();
            updateDisplay();     
        }else if(prop == "Longitude"){
            site.setLongitude(longitude*T_Utilities.DtR);
            calculateDMSFromLongitude();
            updateStates();
            updateDisplay();     
        }else if (prop == "HeightAMSL"){
            site.setHeight(heightAMSL);
            updateStates();
            updateDisplay();     
        }else if(prop == "latitudeDegrees" ||
            prop == "latitudeMinutes" ||
            prop == "latitudeSeconds"){
            // longitude and height have not changed
            calcLatitudeFromDMS();
           // lat, lon and height now set
            // convert to ECEF Coordinates
           site.setLatitude(latitude*T_Utilities.DtR);
           // update display
           updateStates();
           updateDisplay();      
        }else if (prop == "latitudeDirection"){
            calcLatitudeFromDMS();
            if (latitudeDirection == SOUTH){
                latitude = -Math.abs(latitude);
                site.setLatitude(latitude*T_Utilities.DtR);
            }else{
                latitude = Math.abs(latitude);
                site.setLatitude(latitude*T_Utilities.DtR);
            }
            updateStates();
            updateDisplay();    
        }else if (prop == "longitudeDegrees" ||
                    prop == "longitudeMinutes" ||
                    prop == "longitudeSeconds"){
            // latitude and height have not changed
            calcLongitudeFromDMS();
            // lat, lon and height now set
            // convert to ECEF Coordinates
            site.setLongitude(longitude*T_Utilities.DtR);
            // update display
            updateStates();
            updateDisplay();      
        }else if (prop == "longitudeDirection"){
            calcLongitudeFromDMS();
            site.setLongitude(longitude*T_Utilities.DtR);
            updateStates();
            updateDisplay();    
        }else if (prop == "ECEF_X") {
            site.setX(ECEF_X);
            updateStates();
            calculateDMSFromLatitude();
            calculateDMSFromLongitude();
            updateDisplay();
        }else if(prop == "ECEF_Y"){
            site.setY(ECEF_Y);
            updateStates();
            calculateDMSFromLatitude();
            calculateDMSFromLongitude();
            updateDisplay();
        }else if(prop == "ECEF_Z"){
            site.setZ(ECEF_Z);
            updateStates();
            calculateDMSFromLatitude();
            calculateDMSFromLongitude();
            updateDisplay();
        }
    }
    
    /** Getter for property latitudeDirection.
     * @return Value of property latitudeDirection.
     */
    public int getLatitudeDirection() {
        return this.latitudeDirection;
    }
    
    /** Setter for property latitudeDirection.
     * @param latitudeDirection New value of property latitudeDirection.
     */
    public void setLatitudeDirection(int latitudeDirection) throws java.beans.PropertyVetoException {
        int oldLatitudeDirection = this.latitudeDirection;
        vetoableChangeSupport.fireVetoableChange("latitudeDirection", new Integer(oldLatitudeDirection), new Integer(latitudeDirection));
        this.latitudeDirection = latitudeDirection;
        propertyChangeSupport.firePropertyChange("latitudeDirection", new Integer(oldLatitudeDirection), new Integer(latitudeDirection));
    }
    
    /** Getter for property longitudeDirection.
     * @return Value of property longitudeDirection.
     */
    public int getLongitudeDirection() {
        return this.longitudeDirection;
    }
    
    /** Setter for property longitudeDirection.
     * @param longitudeDirection New value of property longitudeDirection.
     */
    public void setLongitudeDirection(int longitudeDirection) throws java.beans.PropertyVetoException {
        int oldLongitudeDirection = this.longitudeDirection;
        vetoableChangeSupport.fireVetoableChange("longitudeDirection", new Integer(oldLongitudeDirection), new Integer(longitudeDirection));
        this.longitudeDirection = longitudeDirection;
        propertyChangeSupport.firePropertyChange("longitudeDirection", new Integer(oldLongitudeDirection), new Integer(longitudeDirection));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField XField;
    private javax.swing.JTextField YField;
    private javax.swing.JTextField ZField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JRadioButton decimalButton;
    private javax.swing.JRadioButton dmsButton;
    private javax.swing.JRadioButton ecefButton;
    private javax.swing.JPanel ecefPanel;
    private javax.swing.JPanel geoPanel;
    private javax.swing.JPanel geoPanelDMS;
    private javax.swing.JRadioButton geodeticButton;
    private javax.swing.JTextField heightDMSField;
    private javax.swing.JTextField heightField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel161;
    private javax.swing.JLabel jLabel162;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel171;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField latitudeDegreesField;
    private javax.swing.JTextField latitudeField;
    private javax.swing.JTextField latitudeMinutesField;
    private javax.swing.JRadioButton latitudeNorthDirection;
    private javax.swing.JTextField latitudeSecondsField;
    private javax.swing.JRadioButton latitudeSouthDirection;
    private javax.swing.JTextField longitudeDegreesField;
    private javax.swing.JRadioButton longitudeEastDirection;
    private javax.swing.JTextField longitudeField;
    private javax.swing.JTextField longitudeMinutesField;
    private javax.swing.JTextField longitudeSecondsField;
    private javax.swing.JRadioButton longitudeWestDirection;
    private javax.swing.JRadioButton positiveButton;
    private javax.swing.JRadioButton posnegButton;
    // End of variables declaration//GEN-END:variables

    /** Holds value of property latitude. */
    private double latitude;    
    
    /** Utility field used by bound properties. */
    private java.beans.PropertyChangeSupport propertyChangeSupport =  new java.beans.PropertyChangeSupport(this);
    
    /** Utility field used by constrained properties. */
    private java.beans.VetoableChangeSupport vetoableChangeSupport =  new java.beans.VetoableChangeSupport(this);
    
    /** Holds value of property longitude. */
    private double longitude;
    
    /** Holds value of property heightAMSL. */
    private double heightAMSL;
    
    /** Holds value of property ECEF_X. */
    private double ECEF_X;
    
    /** Holds value of property ECEF_Y. */
    private double ECEF_Y;
    
    /** Holds value of property ECEF_Z. */
    private double ECEF_Z;
    
    /** Holds value of property latitudeDegrees. */
    private int latitudeDegrees;
    
    /** Holds value of property latitudeMinutes. */
    private int latitudeMinutes;
    
    /** Holds value of property latitudeSeconds. */
    private double latitudeSeconds;
    
    /** Holds value of property longitudeDegrees. */
    private int longitudeDegrees;
    
    /** Holds value of property longitudeMinutes. */
    private int longitudeMinutes;
    
    /** Holds value of property longitudeSeconds. */
    private double longitudeSeconds;
    
    /** Holds value of property latitudeDirection. */
    private int latitudeDirection;
    
    /** Holds value of property longitudeDirection. */
    private int longitudeDirection;
    
}
